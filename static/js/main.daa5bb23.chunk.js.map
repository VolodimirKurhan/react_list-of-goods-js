{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","sortType","isReversed","sortingOptions","setSortingOptions","visibleGoodsList","goods","sortedGoodList","sort","a","b","length","localeCompare","reverse","getSortedGoodsList","handleSortOptionClick","option","value","prevState","className","type","cl","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"gQAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,eACnBC,EAAiB,SA6BhB,IAAMC,EAAM,WACjB,MAA4CC,mBAAS,CACnDC,SAAU,GACVC,YAAY,IAFd,mBAAOC,EAAP,KAAuBC,EAAvB,KAKMC,EAjCR,SAA4BC,EAA5B,GAA8D,IAAzBL,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACvCK,EAAc,YAAOD,GAuB3B,OArBIL,GACFM,EAAeC,MAAK,SAACC,EAAGC,GACtB,OAAQT,GACN,KAAKH,EACH,OAAOW,EAAEE,OAASD,EAAEC,OAGtB,KAAKd,EACH,OAAOY,EAAEG,cAAcF,GAGzB,QACE,OAAO,MAKXR,GACFK,EAAeM,UAGVN,EASkBO,CACvBlB,EACAO,GAUIY,EAAwB,SAACC,EAAQC,GACrCb,GAAkB,SAAAc,GAAS,kCACtBA,GADsB,kBAExBF,EAASC,QAId,OACE,sBAAKE,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYlB,EAAeF,WAAaJ,IAE5CyB,QAAS,kBAAMP,EAAsB,WAAYlB,IAPnD,iCAYA,wBACEuB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYlB,EAAeF,WAAaH,IAE5CwB,QAAS,kBAAMP,EAAsB,WAAYjB,IAPnD,4BAYA,wBACEsB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAalB,EAAeD,aAGhCoB,QAAS,kBAAMP,EAAsB,cAAeZ,EAAeD,aARrE,sBAaEC,EAAeF,UAAYE,EAAeD,aAC1C,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QA1DkB,WAC1BlB,EAAkB,CAChBH,SAAU,GACVC,YAAY,KAoDR,sBAUJ,6BAEIG,EAAiBkB,KAAI,SAAAC,GAAI,OACvB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC5HpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.daa5bb23.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cl from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabetical';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getSortedGoodsList(goods, { sortType, isReversed }) {\n  const sortedGoodList = [...goods];\n\n  if (sortType) {\n    sortedGoodList.sort((a, b) => {\n      switch (sortType) {\n        case SORT_BY_LENGTH: {\n          return a.length - b.length;\n        }\n\n        case SORT_BY_ALPHABET: {\n          return a.localeCompare(b);\n        }\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    sortedGoodList.reverse();\n  }\n\n  return sortedGoodList;\n}\n\nexport const App = () => {\n  const [sortingOptions, setSortingOptions] = useState({\n    sortType: '',\n    isReversed: false,\n  });\n\n  const visibleGoodsList = getSortedGoodsList(\n    goodsFromServer,\n    sortingOptions,\n  );\n\n  const resetSortingOptions = () => {\n    setSortingOptions({\n      sortType: '',\n      isReversed: false,\n    });\n  };\n\n  const handleSortOptionClick = (option, value) => {\n    setSortingOptions(prevState => ({\n      ...prevState,\n      [option]: value,\n    }));\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cl(\n            'button',\n            'is-info',\n            { 'is-light': sortingOptions.sortType !== SORT_BY_ALPHABET },\n          )}\n          onClick={() => handleSortOptionClick('sortType', SORT_BY_ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cl(\n            'button',\n            'is-success',\n            { 'is-light': sortingOptions.sortType !== SORT_BY_LENGTH },\n          )}\n          onClick={() => handleSortOptionClick('sortType', SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cl(\n            'button',\n            'is-warning',\n            { 'is-light': !sortingOptions.isReversed },\n          )}\n          // eslint-disable-next-line max-len\n          onClick={() => handleSortOptionClick('isReversed', !sortingOptions.isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortingOptions.sortType || sortingOptions.isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetSortingOptions}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {\n          visibleGoodsList.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}